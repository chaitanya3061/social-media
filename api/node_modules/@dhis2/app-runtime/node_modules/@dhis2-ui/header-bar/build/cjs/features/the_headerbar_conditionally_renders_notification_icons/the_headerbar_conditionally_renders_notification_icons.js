"use strict";

var _steps = require("cypress-cucumber-preprocessor/steps");

var _index = require("../common/index");

const meUrl = `${_index.baseUrl}/api/me?fields=authorities,avatar,email,name,settings`;
(0, _steps.Given)('the user has the ALL authority', () => {
  cy.fixture('HeaderBar/me').then(fx => {
    cy.route({
      url: meUrl,
      response: { ...fx,
        authorities: ['ALL']
      }
    });
  });
});
(0, _steps.Given)('the user has the M_dhis-web-interpretation and M_dhis-web-messaging authority', () => {
  cy.fixture('HeaderBar/me').then(fx => {
    cy.route({
      url: meUrl,
      response: { ...fx,
        authorities: ['M_dhis-web-interpretation', 'M_dhis-web-messaging']
      }
    });
  });
});
(0, _steps.Given)('the user has the M_dhis-web-interpretation authority', () => {
  cy.fixture('HeaderBar/me').then(fx => {
    cy.route({
      url: meUrl,
      response: { ...fx,
        authorities: ['M_dhis-web-interpretation']
      }
    });
  });
});
(0, _steps.Given)('the user has the M_dhis-web-messaging authority', () => {
  cy.fixture('HeaderBar/me').then(fx => {
    cy.route({
      url: meUrl,
      response: { ...fx,
        authorities: ['M_dhis-web-messaging']
      }
    });
  });
});
(0, _steps.Given)('the user has authority for none of the apps', () => {
  cy.fixture('HeaderBar/me').then(fx => {
    cy.route({
      url: meUrl,
      response: { ...fx,
        authorities: []
      }
    });
  });
});
(0, _steps.Then)('the messaging app icon is not rendered', () => {
  cy.get('[data-test="headerbar-messages"]').should('not.exist');
});
(0, _steps.Then)('the messaging app icon is rendered', () => {
  cy.get('[data-test="headerbar-messages"]').should('exist');
});
(0, _steps.Then)('the interpretations app icon is not rendered', () => {
  cy.get('[data-test="headerbar-interpretations"]').should('not.exist');
});
(0, _steps.Then)('the interpretations app icon is rendered', () => {
  cy.get('[data-test="headerbar-interpretations"]').should('exist');
});