import _JSXStyle from "styled-jsx/style";
import { useConfig } from '@dhis2/app-runtime';
import propTypes from '@dhis2/prop-types';
import React from 'react';
import { joinPath } from './join-path.js';
import { NotificationIcon } from './notification-icon.js';
/*
 AUTHORITIES:
 - ALL: superuser
 - M_dhis-web-interpretation: access to interpretations app
 - M_dhis-web-messaging: access to messaging app
 */

const hasAuthority = (userAuthorities, authId) => Array.isArray(userAuthorities) && userAuthorities.some(userAuthId => userAuthId === 'ALL' || userAuthId === authId);

export const Notifications = ({
  interpretations,
  messages,
  userAuthorities
}) => {
  const {
    baseUrl
  } = useConfig();
  return /*#__PURE__*/React.createElement("div", {
    "data-test": "headerbar-notifications",
    className: "jsx-1500177125"
  }, hasAuthority(userAuthorities, 'M_dhis-web-interpretation') && /*#__PURE__*/React.createElement(NotificationIcon, {
    count: interpretations,
    href: joinPath(baseUrl, 'dhis-web-interpretation'),
    kind: "message",
    dataTestId: "headerbar-interpretations"
  }), hasAuthority(userAuthorities, 'M_dhis-web-messaging') && /*#__PURE__*/React.createElement(NotificationIcon, {
    message: "email",
    count: messages,
    href: joinPath(baseUrl, 'dhis-web-messaging'),
    kind: "interpretation",
    dataTestId: "headerbar-messages"
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1500177125"
  }, ["div.jsx-1500177125{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}"]));
};
Notifications.propTypes = {
  interpretations: propTypes.number,
  messages: propTypes.number,
  userAuthorities: propTypes.arrayOf(propTypes.string)
};