"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Input = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _propTypes = _interopRequireDefault(require("@dhis2/prop-types"));

var _uiConstants = require("@dhis2/ui-constants");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _index = require("../select/index.js");

var _selection = require("./selection.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Input = ({
  selected,
  onChange,
  clearable,
  clearText,
  placeholder,
  dataTest,
  prefix,
  options,
  className,
  disabled,
  inputMaxHeight
}) => {
  const hasSelection = selected && typeof selected === 'string';

  const onClear = (_, e) => {
    const data = {
      selected: ''
    };
    e.stopPropagation();
    onChange(data, e);
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["1360178250", [_uiConstants.colors.grey900]], ["1331770409", [inputMaxHeight]]]) + " " + ((0, _classnames.default)('root', className) || "")
  }, /*#__PURE__*/_react.default.createElement(_index.InputPrefix, {
    prefix: prefix,
    dataTest: `${dataTest}-prefix`
  }), !hasSelection && !prefix && /*#__PURE__*/_react.default.createElement(_index.InputPlaceholder, {
    placeholder: placeholder,
    dataTest: `${dataTest}-placeholder`
  }), hasSelection && /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["1360178250", [_uiConstants.colors.grey900]], ["1331770409", [inputMaxHeight]]]) + " " + "root-input"
  }, /*#__PURE__*/_react.default.createElement(_selection.Selection, {
    selected: selected,
    options: options
  })), hasSelection && clearable && !disabled && /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["1360178250", [_uiConstants.colors.grey900]], ["1331770409", [inputMaxHeight]]]) + " " + "root-right"
  }, /*#__PURE__*/_react.default.createElement(_index.InputClearButton, {
    onClear: onClear,
    clearText: clearText,
    dataTest: `${dataTest}-clear`
  })), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "1360178250",
    dynamic: [_uiConstants.colors.grey900]
  }, [`.root.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:${_uiConstants.colors.grey900};font-size:14px;line-height:16px;}`, ".root-input.__jsx-style-dynamic-selector{overflow-y:auto;-webkit-flex:1;-ms-flex:1;flex:1;}", ".root-right.__jsx-style-dynamic-selector{margin-left:auto;margin-right:10px;}"]), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "1331770409",
    dynamic: [inputMaxHeight]
  }, [`.root-input.__jsx-style-dynamic-selector{max-height:${inputMaxHeight};}`]));
};

exports.Input = Input;
Input.defaultProps = {
  inputMaxHeight: '100px'
};
Input.propTypes = {
  dataTest: _propTypes.default.string.isRequired,
  className: _propTypes.default.string,
  clearText: _propTypes.default.requiredIf(props => props.clearable, _propTypes.default.string),
  clearable: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  inputMaxHeight: _propTypes.default.string,
  options: _propTypes.default.node,
  placeholder: _propTypes.default.string,
  prefix: _propTypes.default.string,
  selected: _propTypes.default.string,
  onChange: _propTypes.default.func
};