"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SharingList = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _propTypes = _interopRequireDefault(require("@dhis2/prop-types"));

var _react = _interopRequireDefault(require("react"));

var _index = _interopRequireDefault(require("./locales/index.js"));

var _sharingConstants = require("./sharing-constants.js");

var _sharingDialogStyles = require("./sharing-dialog.styles.js");

var _sharingListItem = require("./sharing-list-item.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const SharingList = ({
  sharingSettings,
  onChange,
  onRemove
}) => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_style.default, {
  id: _sharingDialogStyles.sharingCommonStyles.__hash
}, _sharingDialogStyles.sharingCommonStyles), /*#__PURE__*/_react.default.createElement(_style.default, {
  id: _sharingDialogStyles.sharingListStyles.__hash
}, _sharingDialogStyles.sharingListStyles), /*#__PURE__*/_react.default.createElement("p", {
  className: `jsx-${_sharingDialogStyles.sharingCommonStyles.__hash} jsx-${_sharingDialogStyles.sharingListStyles.__hash}` + " " + "sharing-subtitle"
}, _index.default.t('Users, groups and roles that currently have access')), /*#__PURE__*/_react.default.createElement("div", {
  className: `jsx-${_sharingDialogStyles.sharingCommonStyles.__hash} jsx-${_sharingDialogStyles.sharingListStyles.__hash}` + " " + "sharing-headers"
}, /*#__PURE__*/_react.default.createElement("div", {
  className: `jsx-${_sharingDialogStyles.sharingCommonStyles.__hash} jsx-${_sharingDialogStyles.sharingListStyles.__hash}` + " " + "sharing-header-1"
}, _index.default.t('User / Group / Role')), /*#__PURE__*/_react.default.createElement("div", {
  className: `jsx-${_sharingDialogStyles.sharingCommonStyles.__hash} jsx-${_sharingDialogStyles.sharingListStyles.__hash}` + " " + "sharing-header-2"
}, _index.default.t('Access level'))), /*#__PURE__*/_react.default.createElement("div", {
  className: `jsx-${_sharingDialogStyles.sharingCommonStyles.__hash} jsx-${_sharingDialogStyles.sharingListStyles.__hash}` + " " + "sharing-list"
}, /*#__PURE__*/_react.default.createElement(_sharingListItem.SharingListItem, {
  name: _index.default.t('All users'),
  target: _sharingConstants.SHARE_TARGET_PUBLIC,
  access: sharingSettings.public,
  accessOptions: Object.keys(_sharingConstants.accessStrings),
  disabled: !sharingSettings.allowPublic,
  onChange: newAccess => onChange({
    type: 'public',
    access: newAccess
  })
}), Object.values(sharingSettings.groups).map(({
  id,
  name,
  access
}) => /*#__PURE__*/_react.default.createElement(_sharingListItem.SharingListItem, {
  key: id,
  name: name,
  target: _sharingConstants.SHARE_TARGET_GROUP,
  access: access,
  accessOptions: [_sharingConstants.ACCESS_VIEW_ONLY, _sharingConstants.ACCESS_VIEW_AND_EDIT],
  onChange: newAccess => onChange({
    type: 'group',
    id,
    access: newAccess
  }),
  onRemove: () => onRemove({
    type: 'group',
    id
  })
})), Object.values(sharingSettings.users).map(({
  id,
  name,
  access
}) => access && /*#__PURE__*/_react.default.createElement(_sharingListItem.SharingListItem, {
  key: id,
  name: name,
  target: _sharingConstants.SHARE_TARGET_USER,
  access: access,
  accessOptions: [_sharingConstants.ACCESS_VIEW_ONLY, _sharingConstants.ACCESS_VIEW_AND_EDIT],
  onChange: newAccess => onChange({
    type: 'user',
    id,
    access: newAccess
  }),
  onRemove: () => onRemove({
    type: 'user',
    id
  })
}))));

exports.SharingList = SharingList;
SharingList.propTypes = {
  sharingSettings: _propTypes.default.object,
  onChange: _propTypes.default.func,
  onRemove: _propTypes.default.func
};