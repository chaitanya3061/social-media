"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SharingListItem = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _divider = require("@dhis2-ui/divider");

var _propTypes = _interopRequireDefault(require("@dhis2/prop-types"));

var _uiConstants = require("@dhis2/ui-constants");

var _uiIcons = require("@dhis2/ui-icons");

var _react = _interopRequireDefault(require("react"));

var _accessSelect = require("./access-select.js");

var _avatar = require("./icons/avatar.js");

var _index = _interopRequireDefault(require("./locales/index.js"));

var _sharingConstants = require("./sharing-constants.js");

var _sharingDialogStyles = require("./sharing-dialog.styles.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const SharingListItem = ({
  name,
  target,
  access,
  accessOptions,
  disabled,
  onChange,
  onRemove
}) => {
  var _accessStrings$access, _accessStrings$access2;

  const getIcon = target => {
    switch (target) {
      case _sharingConstants.SHARE_TARGET_EXTERNAL:
        return /*#__PURE__*/_react.default.createElement(_uiIcons.IconWorld24, {
          color: _uiConstants.colors.grey600
        });

      case _sharingConstants.SHARE_TARGET_PUBLIC:
      case _sharingConstants.SHARE_TARGET_GROUP:
        return /*#__PURE__*/_react.default.createElement(_uiIcons.IconUserGroup24, {
          color: _uiConstants.colors.grey600
        });

      case _sharingConstants.SHARE_TARGET_USER:
        return /*#__PURE__*/_react.default.createElement(_avatar.Avatar, {
          name: name
        });
    }
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: `jsx-${_sharingDialogStyles.sharingListItemStyles.__hash}` + " " + "sharing-list-item"
  }, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: _sharingDialogStyles.sharingListItemStyles.__hash
  }, _sharingDialogStyles.sharingListItemStyles), /*#__PURE__*/_react.default.createElement("div", {
    className: `jsx-${_sharingDialogStyles.sharingListItemStyles.__hash}` + " " + "share-details"
  }, getIcon(target), /*#__PURE__*/_react.default.createElement("div", {
    className: `jsx-${_sharingDialogStyles.sharingListItemStyles.__hash}` + " " + "share-details-text"
  }, /*#__PURE__*/_react.default.createElement("p", {
    className: `jsx-${_sharingDialogStyles.sharingListItemStyles.__hash}` + " " + "share-entity"
  }, name), /*#__PURE__*/_react.default.createElement("p", {
    className: `jsx-${_sharingDialogStyles.sharingListItemStyles.__hash}` + " " + "share-context"
  }, target === _sharingConstants.SHARE_TARGET_PUBLIC ? (_accessStrings$access = _sharingConstants.accessStrings[access]) === null || _accessStrings$access === void 0 ? void 0 : _accessStrings$access.publicDescription() : (_accessStrings$access2 = _sharingConstants.accessStrings[access]) === null || _accessStrings$access2 === void 0 ? void 0 : _accessStrings$access2.description()))), /*#__PURE__*/_react.default.createElement(_accessSelect.AccessSelect, {
    prefix: _index.default.t('Metadata'),
    access: access,
    accessOptions: accessOptions,
    disabled: disabled,
    showRemoveOption: !(0, _sharingConstants.isPermanentTarget)(target),
    onChange: selected => selected === 'remove' ? onRemove() : onChange(selected)
  })), /*#__PURE__*/_react.default.createElement(_divider.Divider, null));
};

exports.SharingListItem = SharingListItem;
SharingListItem.propTypes = {
  access: _propTypes.default.string.isRequired,
  accessOptions: _propTypes.default.array.isRequired,
  name: _propTypes.default.string.isRequired,
  target: _propTypes.default.string.isRequired,
  onChange: _propTypes.default.func.isRequired,
  disabled: _propTypes.default.bool,
  onRemove: _propTypes.default.func
};