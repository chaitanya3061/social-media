import _JSXStyle from "styled-jsx/style";
import { Divider } from '@dhis2-ui/divider';
import PropTypes from '@dhis2/prop-types';
import { colors } from '@dhis2/ui-constants';
import { IconWorld24, IconUserGroup24 } from '@dhis2/ui-icons';
import React from 'react';
import { AccessSelect } from './access-select.js';
import { Avatar } from './icons/avatar.js';
import i18n from './locales/index.js';
import { SHARE_TARGET_EXTERNAL, SHARE_TARGET_PUBLIC, SHARE_TARGET_USER, SHARE_TARGET_GROUP, isPermanentTarget, accessStrings } from './sharing-constants.js';
import { sharingListItemStyles } from './sharing-dialog.styles.js';
export const SharingListItem = ({
  name,
  target,
  access,
  accessOptions,
  disabled,
  onChange,
  onRemove
}) => {
  var _accessStrings$access, _accessStrings$access2;

  const getIcon = target => {
    switch (target) {
      case SHARE_TARGET_EXTERNAL:
        return /*#__PURE__*/React.createElement(IconWorld24, {
          color: colors.grey600
        });

      case SHARE_TARGET_PUBLIC:
      case SHARE_TARGET_GROUP:
        return /*#__PURE__*/React.createElement(IconUserGroup24, {
          color: colors.grey600
        });

      case SHARE_TARGET_USER:
        return /*#__PURE__*/React.createElement(Avatar, {
          name: name
        });
    }
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: `jsx-${sharingListItemStyles.__hash}` + " " + "sharing-list-item"
  }, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: sharingListItemStyles.__hash
  }, sharingListItemStyles), /*#__PURE__*/React.createElement("div", {
    className: `jsx-${sharingListItemStyles.__hash}` + " " + "share-details"
  }, getIcon(target), /*#__PURE__*/React.createElement("div", {
    className: `jsx-${sharingListItemStyles.__hash}` + " " + "share-details-text"
  }, /*#__PURE__*/React.createElement("p", {
    className: `jsx-${sharingListItemStyles.__hash}` + " " + "share-entity"
  }, name), /*#__PURE__*/React.createElement("p", {
    className: `jsx-${sharingListItemStyles.__hash}` + " " + "share-context"
  }, target === SHARE_TARGET_PUBLIC ? (_accessStrings$access = accessStrings[access]) === null || _accessStrings$access === void 0 ? void 0 : _accessStrings$access.publicDescription() : (_accessStrings$access2 = accessStrings[access]) === null || _accessStrings$access2 === void 0 ? void 0 : _accessStrings$access2.description()))), /*#__PURE__*/React.createElement(AccessSelect, {
    prefix: i18n.t('Metadata'),
    access: access,
    accessOptions: accessOptions,
    disabled: disabled,
    showRemoveOption: !isPermanentTarget(target),
    onChange: selected => selected === 'remove' ? onRemove() : onChange(selected)
  })), /*#__PURE__*/React.createElement(Divider, null));
};
SharingListItem.propTypes = {
  access: PropTypes.string.isRequired,
  accessOptions: PropTypes.array.isRequired,
  name: PropTypes.string.isRequired,
  target: PropTypes.string.isRequired,
  onChange: PropTypes.func.isRequired,
  disabled: PropTypes.bool,
  onRemove: PropTypes.func
};