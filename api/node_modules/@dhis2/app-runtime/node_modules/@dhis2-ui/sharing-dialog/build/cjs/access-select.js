"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccessSelect = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _menu = require("@dhis2-ui/menu");

var _select = require("@dhis2-ui/select");

var _tooltip = require("@dhis2-ui/tooltip");

var _appRuntime = require("@dhis2/app-runtime");

var _propTypes = _interopRequireDefault(require("@dhis2/prop-types"));

var _react = _interopRequireDefault(require("react"));

var _index = _interopRequireDefault(require("./locales/index.js"));

var _sharingConstants = require("./sharing-constants.js");

var _sharingDialogStyles = require("./sharing-dialog.styles.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const AccessSelect = ({
  label,
  placeholder,
  prefix,
  access,
  accessOptions,
  showRemoveOption,
  disabled,
  onChange
}) => {
  const {
    offline
  } = (0, _appRuntime.useOnlineStatus)();

  const renderSingleSelectField = () => /*#__PURE__*/_react.default.createElement(_select.SingleSelectField, {
    label: label,
    placeholder: placeholder,
    prefix: prefix,
    disabled: offline || disabled,
    selected: access,
    onChange: ({
      selected
    }) => onChange(selected)
  }, accessOptions.map(value => /*#__PURE__*/_react.default.createElement(CustomSingleSelectOption, {
    key: value,
    label: _sharingConstants.accessStrings[value].option,
    value: value,
    active: value === access
  })), showRemoveOption && /*#__PURE__*/_react.default.createElement(CustomSingleSelectOption, {
    key: "remove",
    label: _index.default.t('Remove access'),
    value: "remove",
    destructive: true
  }));

  return /*#__PURE__*/_react.default.createElement("div", {
    className: `jsx-${_sharingDialogStyles.accessSelectStyles.__hash}` + " " + "share-select"
  }, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: _sharingDialogStyles.accessSelectStyles.__hash
  }, _sharingDialogStyles.accessSelectStyles), offline ? /*#__PURE__*/_react.default.createElement(_tooltip.Tooltip, {
    content: _index.default.t('Not available offline')
  }, renderSingleSelectField()) : renderSingleSelectField());
};

exports.AccessSelect = AccessSelect;
AccessSelect.propTypes = {
  accessOptions: _propTypes.default.array.isRequired,
  onChange: _propTypes.default.func.isRequired,
  access: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  label: _propTypes.default.string,
  placeholder: _propTypes.default.string,
  prefix: _propTypes.default.string,
  showRemoveOption: _propTypes.default.bool
};

const CustomSingleSelectOption = ({
  label,
  value,
  active,
  destructive,
  onClick
}) => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, destructive && /*#__PURE__*/_react.default.createElement(_menu.MenuDivider, {
  dense: true
}), /*#__PURE__*/_react.default.createElement(_menu.MenuItem, {
  label: label,
  value: value,
  active: active,
  destructive: destructive,
  onClick: (_, e) => onClick({
    selected: value
  }, e),
  dense: true
}));

CustomSingleSelectOption.propTypes = {
  label: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  active: _propTypes.default.bool,
  destructive: _propTypes.default.bool,
  onClick: _propTypes.default.func
};