"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertConstantToAccess = exports.convertAccessToConstant = exports.defaultSharingSettings = exports.isPermanentTarget = exports.SHARE_TARGET_GROUP = exports.SHARE_TARGET_USER = exports.SHARE_TARGET_PUBLIC = exports.SHARE_TARGET_EXTERNAL = exports.accessStrings = exports.ACCESS_VIEW_AND_EDIT = exports.ACCESS_VIEW_ONLY = exports.ACCESS_NONE = void 0;

var _index = _interopRequireDefault(require("./locales/index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ACCESS_NONE = 'ACCESS_NONE';
exports.ACCESS_NONE = ACCESS_NONE;
const ACCESS_VIEW_ONLY = 'ACCESS_VIEW_ONLY';
exports.ACCESS_VIEW_ONLY = ACCESS_VIEW_ONLY;
const ACCESS_VIEW_AND_EDIT = 'ACCESS_VIEW_AND_EDIT';
exports.ACCESS_VIEW_AND_EDIT = ACCESS_VIEW_AND_EDIT;

const noAccess = _index.default.t('No access');

const accessStrings = {
  [ACCESS_NONE]: {
    publicDescription: () => noAccess,
    description: () => noAccess,
    option: noAccess
  },
  [ACCESS_VIEW_ONLY]: {
    publicDescription: () => _index.default.t('Anyone logged in can view'),
    description: () => _index.default.t('Can view'),
    option: _index.default.t('View only')
  },
  [ACCESS_VIEW_AND_EDIT]: {
    publicDescription: () => _index.default.t('Anyone logged in can view and edit'),
    description: () => _index.default.t('Can view and edit'),
    option: _index.default.t('View and edit')
  }
};
exports.accessStrings = accessStrings;
const SHARE_TARGET_EXTERNAL = 'SHARE_TARGET_EXTERNAL';
exports.SHARE_TARGET_EXTERNAL = SHARE_TARGET_EXTERNAL;
const SHARE_TARGET_PUBLIC = 'SHARE_TARGET_PUBLIC';
exports.SHARE_TARGET_PUBLIC = SHARE_TARGET_PUBLIC;
const SHARE_TARGET_USER = 'SHARE_TARGET_USER';
exports.SHARE_TARGET_USER = SHARE_TARGET_USER;
const SHARE_TARGET_GROUP = 'SHARE_TARGET_GROUP';
exports.SHARE_TARGET_GROUP = SHARE_TARGET_GROUP;

const isPermanentTarget = target => [SHARE_TARGET_EXTERNAL, SHARE_TARGET_PUBLIC].includes(target);

exports.isPermanentTarget = isPermanentTarget;
const defaultSharingSettings = {
  name: '',
  allowExternal: true,
  allowPublic: true,
  external: ACCESS_NONE,
  public: ACCESS_NONE,
  groups: {},
  users: {}
};
exports.defaultSharingSettings = defaultSharingSettings;

const convertAccessToConstant = access => {
  if (typeof access === 'boolean') {
    return access ? ACCESS_VIEW_ONLY : ACCESS_NONE;
  }

  if (/^rw/.test(access)) {
    return ACCESS_VIEW_AND_EDIT;
  } else if (/^r-/.test(access)) {
    return ACCESS_VIEW_ONLY;
  } else if (/^--/.test(access)) {
    return ACCESS_NONE;
  } else {
    return defaultSharingSettings.public;
  }
};

exports.convertAccessToConstant = convertAccessToConstant;

const convertConstantToAccess = (constant, useBoolean) => {
  switch (constant) {
    case ACCESS_NONE:
      return useBoolean ? false : '--------';

    case ACCESS_VIEW_ONLY:
      return useBoolean ? true : 'r-------';

    case ACCESS_VIEW_AND_EDIT:
      return useBoolean ? true : 'rw------';

    default:
      return useBoolean ? false : '--------';
  }
};

exports.convertConstantToAccess = convertConstantToAccess;