"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DashboardSharingContent = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _tab = require("@dhis2-ui/tab");

var _propTypes = _interopRequireDefault(require("@dhis2/prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _dashboardCascadeSharingContent = require("./dashboard-cascade-sharing-content.js");

var _defaultSharingContent = require("./default-sharing-content.js");

var _index = _interopRequireDefault(require("./locales/index.js"));

var _sharingDialogStyles = require("./sharing-dialog.styles.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DashboardSharingContent = ({
  sharingSettings,
  onAdd,
  onChange,
  onRemove
}) => {
  const [activeTabIndex, setActiveTabIndex] = (0, _react.useState)(0);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_tab.TabBar, null, /*#__PURE__*/_react.default.createElement(_tab.Tab, {
    onClick: () => setActiveTabIndex(0),
    selected: activeTabIndex === 0
  }, _index.default.t('Dashboard sharing')), /*#__PURE__*/_react.default.createElement(_tab.Tab, {
    onClick: () => setActiveTabIndex(1),
    selected: activeTabIndex === 1
  }, _index.default.t('Apply sharing to dashboard visualizations'))), /*#__PURE__*/_react.default.createElement("div", {
    className: `jsx-${_sharingDialogStyles.dashboardSharingStyles.__hash}` + " " + "tab-content"
  }, activeTabIndex === 0 && /*#__PURE__*/_react.default.createElement(_defaultSharingContent.DefaultSharingContent, {
    sharingSettings: sharingSettings,
    onAdd: onAdd,
    onChange: onChange,
    onRemove: onRemove
  }), activeTabIndex === 1 && /*#__PURE__*/_react.default.createElement(_dashboardCascadeSharingContent.DashboardCascadeSharingContent, {
    sharingSettings: sharingSettings
  })), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: _sharingDialogStyles.dashboardSharingStyles.__hash
  }, _sharingDialogStyles.dashboardSharingStyles));
};

exports.DashboardSharingContent = DashboardSharingContent;
DashboardSharingContent.propTypes = {
  sharingSettings: _propTypes.default.object.isRequired,
  onAdd: _propTypes.default.func.isRequired,
  onChange: _propTypes.default.func.isRequired,
  onRemove: _propTypes.default.func.isRequired
};