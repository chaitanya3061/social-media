import _JSXStyle from "styled-jsx/style";
import { colors, theme, spacers } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { Content } from './content.js';
import { Icon } from './icon.js';
import { Remove } from './remove.js';

const Chip = ({
  selected,
  dense,
  disabled,
  dragging,
  overflow,
  className,
  children,
  onRemove,
  onClick,
  icon,
  dataTest
}) => /*#__PURE__*/React.createElement("span", {
  onClick: e => {
    if (!disabled && onClick) {
      onClick({}, e);
    }
  },
  "data-test": dataTest,
  className: _JSXStyle.dynamic([["1003369876", [spacers.dp4, colors.grey200, colors.grey900, colors.grey300, theme.secondary600, colors.white]]]) + " " + (cx(className, {
    selected,
    dense,
    disabled,
    dragging
  }) || "")
}, /*#__PURE__*/React.createElement(Icon, {
  icon: icon,
  dataTest: `${dataTest}-icon`
}), /*#__PURE__*/React.createElement(Content, {
  overflow: overflow
}, children), /*#__PURE__*/React.createElement(Remove, {
  onRemove: onRemove,
  dataTest: `${dataTest}-remove`
}), /*#__PURE__*/React.createElement(_JSXStyle, {
  id: "1003369876",
  dynamic: [spacers.dp4, colors.grey200, colors.grey900, colors.grey300, theme.secondary600, colors.white]
}, [`span.__jsx-style-dynamic-selector{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:32px;margin:${spacers.dp4};border-radius:16px;background-color:${colors.grey200};font-size:14px;line-height:16px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:${colors.grey900};}`, ".dense.__jsx-style-dynamic-selector{height:24px;font-size:13px;line-height:15px;}", `span.__jsx-style-dynamic-selector:hover{background-color:${colors.grey300};}`, `.selected.__jsx-style-dynamic-selector{background-color:${theme.secondary600};font-weight:500;}`, ".selected.__jsx-style-dynamic-selector:hover{background-color:#00695c;}", `.selected.__jsx-style-dynamic-selector,.selected.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector,.selected.__jsx-style-dynamic-selector .remove-icon.__jsx-style-dynamic-selector{color:${colors.white};}`, ".disabled.__jsx-style-dynamic-selector{cursor:not-allowed;opacity:0.3;}", ".disabled.__jsx-style-dynamic-selector .remove-icon.__jsx-style-dynamic-selector{pointer-events:none;}", ".dragging.__jsx-style-dynamic-selector{box-shadow:0 3px 1px -2px rgba(0,0,0,0.2), 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12);}"]));

Chip.defaultProps = {
  dataTest: 'dhis2-uicore-chip'
};
Chip.propTypes = {
  children: PropTypes.any,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  dense: PropTypes.bool,
  disabled: PropTypes.bool,
  dragging: PropTypes.bool,
  icon: PropTypes.element,
  overflow: PropTypes.bool,
  selected: PropTypes.bool,
  onClick: PropTypes.func,
  onRemove: PropTypes.func
};
export { Chip };