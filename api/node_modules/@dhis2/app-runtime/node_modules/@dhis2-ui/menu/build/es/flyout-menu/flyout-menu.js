import _JSXStyle from "styled-jsx/style";
import { Card } from '@dhis2-ui/card';
import { spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React, { Children, cloneElement, isValidElement, useState } from 'react';
import { Menu } from '../index.js';

const FlyoutMenu = ({
  children,
  className,
  dataTest,
  dense,
  maxHeight,
  maxWidth
}) => {
  const [openedSubMenu, setOpenedSubMenu] = useState(null);

  const toggleSubMenu = index => {
    const toggleValue = index === openedSubMenu ? null : index;
    setOpenedSubMenu(toggleValue);
  };

  const cardCSS = {
    styles: /*#__PURE__*/React.createElement(_JSXStyle, {
      id: "1140426988",
      dynamic: [spacers.dp4, maxHeight]
    }, [`.__jsx-style-dynamic-selector{padding:${spacers.dp4} 0;max-height:${maxHeight};overflow-y:auto;}`]),
    className: _JSXStyle.dynamic([["1140426988", [spacers.dp4, maxHeight]]])
  };
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["2253458022", [dense ? '128' : '180', maxWidth, maxHeight]]]) + " " + (className || "")
  }, /*#__PURE__*/React.createElement(Card, {
    className: cardCSS.className
  }, /*#__PURE__*/React.createElement(Menu, {
    dense: dense
  }, Children.map(children, (child, index) => /*#__PURE__*/isValidElement(child) ? /*#__PURE__*/cloneElement(child, {
    showSubMenu: openedSubMenu === index,
    toggleSubMenu: toggleSubMenu.bind(this, index)
  }) : child))), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2253458022",
    dynamic: [dense ? '128' : '180', maxWidth, maxHeight]
  }, [`div.__jsx-style-dynamic-selector{display:inline-block;min-width:${dense ? '128' : '180'}px;max-width:${maxWidth};max-height:${maxHeight};}`]), cardCSS.styles);
};

FlyoutMenu.defaultProps = {
  dataTest: 'dhis2-uicore-menu',
  maxWidth: '380px',
  maxHeight: 'auto'
};
FlyoutMenu.propTypes = {
  /** Typically, but not limited to, `MenuItem` components */
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,

  /** Menu uses smaller dimensions */
  dense: PropTypes.bool,
  maxHeight: PropTypes.string,
  maxWidth: PropTypes.string
};
export { FlyoutMenu };