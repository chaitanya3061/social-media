import _JSXStyle from "styled-jsx/style";
import propTypes from '@dhis2/prop-types';
import { spacers } from '@dhis2/ui-constants';
import React from 'react';
import { EndIntersectionDetector } from './end-intersection-detector.js';
export const SourceOptions = ({
  children,
  dataTest,
  sourceEmptyPlaceholder,
  sourceOptionsRef,
  onSourceEndReached
}) => /*#__PURE__*/React.createElement("div", {
  "data-test": dataTest,
  ref: sourceOptionsRef,
  className: _JSXStyle.dynamic([["392419471", [spacers.dp4]]]) + " " + "container"
}, /*#__PURE__*/React.createElement("div", {
  className: _JSXStyle.dynamic([["392419471", [spacers.dp4]]]) + " " + "content-container"
}, children, !React.Children.count(children) && sourceEmptyPlaceholder, onSourceEndReached && /*#__PURE__*/React.createElement(EndIntersectionDetector, {
  rootRef: sourceOptionsRef,
  onEndReached: onSourceEndReached
})), /*#__PURE__*/React.createElement(_JSXStyle, {
  id: "392419471",
  dynamic: [spacers.dp4]
}, [`.container.__jsx-style-dynamic-selector{padding:${spacers.dp4} 0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;overflow-y:auto;}`, ".content-container.__jsx-style-dynamic-selector{position:relative;}"]));
SourceOptions.propTypes = {
  dataTest: propTypes.string.isRequired,
  children: propTypes.node,
  sourceEmptyPlaceholder: propTypes.node,
  sourceOptionsRef: propTypes.shape({
    current: propTypes.instanceOf(HTMLElement)
  }),
  onSourceEndReached: propTypes.func
};