import _JSXStyle from "styled-jsx/style";
import propTypes from '@dhis2/prop-types';
import { spacers, colors } from '@dhis2/ui-constants';
import { IconErrorFilled24, IconInfoFilled24, IconWarningFilled24, IconCheckmark24 } from '@dhis2/ui-icons';
import React from 'react';

const StatusIcon = ({
  error,
  warning,
  valid,
  info,
  defaultTo
}) => {
  if (error) {
    return /*#__PURE__*/React.createElement(IconErrorFilled24, {
      color: colors.white
    });
  }

  if (warning) {
    return /*#__PURE__*/React.createElement(IconWarningFilled24, {
      color: colors.yellow900
    });
  }

  if (valid) {
    return /*#__PURE__*/React.createElement(IconCheckmark24, {
      color: colors.white
    });
  }

  if (info) {
    return /*#__PURE__*/React.createElement(IconInfoFilled24, {
      color: colors.white
    });
  }

  return defaultTo;
};

StatusIcon.defaultProps = {
  defaultTo: null
};
StatusIcon.propTypes = {
  className: propTypes.string,
  defaultTo: propTypes.element,
  error: propTypes.bool,
  info: propTypes.bool,
  valid: propTypes.bool,
  warning: propTypes.bool
};

const Icon = ({
  icon,
  success,
  warning,
  critical,
  info,
  dataTest
}) => {
  if (icon === false) {
    return null;
  }

  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["2057519855", [spacers.dp16]]])
  }, /*#__PURE__*/React.isValidElement(icon) ? icon : /*#__PURE__*/React.createElement(StatusIcon, {
    valid: success,
    error: critical,
    warning: warning,
    info: info
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2057519855",
    dynamic: [spacers.dp16]
  }, [`div.__jsx-style-dynamic-selector{margin-right:${spacers.dp16};}`]));
};

const iconPropType = propTypes.oneOfType([propTypes.bool, propTypes.element]);
const alertStatePropType = propTypes.mutuallyExclusive(['success', 'warning', 'critical', 'info'], propTypes.bool);
Icon.propTypes = {
  dataTest: propTypes.string.isRequired,
  critical: alertStatePropType,
  icon: iconPropType,
  info: alertStatePropType,
  success: alertStatePropType,
  warning: alertStatePropType
};
export { Icon, iconPropType };