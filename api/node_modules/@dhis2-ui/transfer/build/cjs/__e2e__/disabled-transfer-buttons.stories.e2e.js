"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AllOptionsSelected = exports.OnlyDisabledSourceOptions = exports.SomeOptionsSelected = exports.HasOptions = exports.NoOptions = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _transfer = require("../transfer.js");

var _options = require("./common/options.js");

var _statefulDecorator = require("./common/stateful-decorator.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  title: 'Transfer Disabled Transfer Buttons',
  decorators: [(0, _statefulDecorator.statefulDecorator)()]
};
exports.default = _default;

const NoOptions = (_, {
  selected,
  onChange
}) => /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
  selected: selected,
  onChange: onChange,
  options: []
});

exports.NoOptions = NoOptions;

const HasOptions = (_, {
  selected,
  onChange
}) => /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
  selected: selected,
  onChange: onChange,
  options: _options.options
});

exports.HasOptions = HasOptions;

const SomeOptionsSelected = (_, {
  selected,
  onChange
}) => /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
  selected: selected,
  onChange: onChange,
  options: _options.options
});

exports.SomeOptionsSelected = SomeOptionsSelected;

const OnlyDisabledSourceOptions = (_, {
  selected,
  onChange
}) => /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
  selected: selected,
  onChange: onChange,
  options: [{ ..._options.options[0],
    disabled: true
  }]
});

exports.OnlyDisabledSourceOptions = OnlyDisabledSourceOptions;
SomeOptionsSelected.story = {
  decorators: [(0, _statefulDecorator.statefulDecorator)({
    initialState: _options.options.slice(0, 4).map(({
      value
    }) => value)
  })]
};

const AllOptionsSelected = (_, {
  selected,
  onChange
}) => /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
  selected: selected,
  onChange: onChange,
  options: _options.options
});

exports.AllOptionsSelected = AllOptionsSelected;
AllOptionsSelected.story = {
  decorators: [(0, _statefulDecorator.statefulDecorator)({
    initialState: _options.options.map(({
      value
    }) => value)
  })]
};