"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pagination = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _index = _interopRequireDefault(require("./locales/index.js"));

var _pageControls = require("./page-controls.js");

var _pageSelect = require("./page-select.js");

var _pageSizeSelect = require("./page-size-select.js");

var _pageSummary = require("./page-summary.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Pagination = ({
  className,
  dataTest,
  hidePageSizeSelect,
  hidePageSelect,
  hidePageSummary,
  page,
  pageCount,
  pageSize,
  total,
  pageSizes,
  onPageChange,
  onPageSizeChange,
  nextPageText,
  pageSelectText,
  pageSizeSelectText,
  pageSummaryText,
  previousPageText
}) => {
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-test": dataTest,
    className: "jsx-3647884394" + " " + ((0, _classnames.default)('container', className) || "")
  }, hidePageSizeSelect ? /*#__PURE__*/_react.default.createElement("div", {
    className: "jsx-3647884394" + " " + "spacer"
  }) : /*#__PURE__*/_react.default.createElement(_pageSizeSelect.PageSizeSelect, {
    dataTest: dataTest,
    pageSize: pageSize,
    pageSizes: pageSizes,
    onChange: onPageSizeChange,
    pageSizeSelectText: pageSizeSelectText
  }), !hidePageSummary && /*#__PURE__*/_react.default.createElement(_pageSummary.PageSummary, {
    dataTest: dataTest,
    page: page,
    pageCount: pageCount,
    pageSize: pageSize,
    total: total,
    pageSummaryText: pageSummaryText
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "jsx-3647884394" + " " + "page-navigation"
  }, !hidePageSelect && /*#__PURE__*/_react.default.createElement(_pageSelect.PageSelect, {
    dataTest: dataTest,
    pageSelectText: pageSelectText,
    page: page,
    pageCount: pageCount,
    onChange: onPageChange
  }), /*#__PURE__*/_react.default.createElement(_pageControls.PageControls, {
    dataTest: dataTest,
    nextPageText: nextPageText,
    page: page,
    pageCount: pageCount,
    previousPageText: previousPageText,
    onClick: onPageChange
  })), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3647884394"
  }, [".container.jsx-3647884394{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}", ".spacer.jsx-3647884394{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".page-navigation.jsx-3647884394{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;min-height:32px;}"]));
};

exports.Pagination = Pagination;
Pagination.defaultProps = {
  dataTest: 'dhis2-uiwidgets-pagination',
  pageSizes: ['5', '10', '20', '30', '40', '50', '75', '100'],
  nextPageText: () => _index.default.t('Next'),
  pageSelectText: () => _index.default.t('Page'),
  pageSizeSelectText: () => _index.default.t('Items per page'),
  pageSummaryText: interpolationObject => _index.default.t('Page {{page}} of {{pageCount}}, items {{firstItem}}-{{lastItem}} of {{total}}', interpolationObject),
  previousPageText: () => _index.default.t('Previous')
};
Pagination.propTypes = {
  page: _propTypes.default.number.isRequired,
  pageCount: _propTypes.default.number.isRequired,
  pageSize: _propTypes.default.number.isRequired,
  total: _propTypes.default.number.isRequired,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  hidePageSelect: _propTypes.default.bool,
  hidePageSizeSelect: _propTypes.default.bool,
  hidePageSummary: _propTypes.default.bool,
  nextPageText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  pageSelectText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  pageSizeSelectText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  pageSizes: _propTypes.default.arrayOf(_propTypes.default.string),
  pageSummaryText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  previousPageText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  onPageChange: _propTypes.default.func,
  onPageSizeChange: _propTypes.default.func
};